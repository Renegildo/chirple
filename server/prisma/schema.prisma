// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @unique @default(uuid())
  username String  @unique
  email    String  @unique
  password String
  imageUrl String?
  aboutMe  String?

  servers  ServerUser[]
  messages Message[]
}

model Server {
  id          String  @unique @default(uuid())
  name        String
  description String  @default("Sem descricao")
  imageUrl    String?
  isPublic    Boolean @default(false)

  ownerId String

  members  ServerUser[]
  channels Channel[]
  invites  Invite[]
  emojis   Emoji[]
}

model ServerUser {
  id       String @unique @default(uuid())
  serverId String
  userId   String

  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([serverId, userId])
}

model Channel {
  id   String @unique @default(uuid())
  name String
  desc String @default("Sem descricao")

  serverId String

  server   Server    @relation(fields: [serverId], references: [id], onDelete: Cascade)
  messages Message[]
}

model Invite {
  id        String   @unique @default(uuid())
  serverId  String
  server    Server   @relation(fields: [serverId], references: [id], onDelete: Cascade)
  uses      Int
  expiresIn DateTime

  createdAt DateTime @default(now())
}

model Message {
  id        String  @unique @default(uuid())
  message   String
  imageUrl  String?
  isDeleted Boolean @default(false)
  isEdited  Boolean @default(false)

  ownerId   String?
  channelId String

  channel   Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  owner     User?    @relation(fields: [ownerId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())
}

model Emoji {
  id       String @unique @default(uuid())
  code     String
  imageUrl String

  serverId String
  server   Server @relation(fields: [serverId], references: [id])
}
